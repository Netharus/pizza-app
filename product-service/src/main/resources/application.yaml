server:
  port: ${PRODUCT_SERVER_PORT}
spring:
  application:
    name: product-service
  config:
    import: optional:file:./docker/.env[.properties]
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${PRODUCT_DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
  liquibase:
    change-log: db/changelog/db.changelog-master.yaml
  cloud:
    openfeign:
      client:
        config:
          orderClient:
            url: ${ORDER_GATEWAY_URL}
            error-decoder: com.modsen.productservice.handler.CustomErrorDecoder
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring:
          json:
            type:
              mapping: ProductResponseForOrderDto:com.modsen.productservice.dto.ProductResponseForOrderDto
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8090/realms/pizza-microservice-realm
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:${EUREKA_SERVER_PORT}/eureka/
    fetch-registry: true
    register-with-eureka: true
  instance:
    hostname: localhost
    prefer-ip-address: true